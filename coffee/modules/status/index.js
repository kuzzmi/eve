// Generated by CoffeeScript 1.9.1
var BaseModule, Q, Status, colors,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

BaseModule = require('../base');

Q = require('q');

colors = require('colors');

Status = (function(superClass) {
  extend(Status, superClass);

  function Status(params) {
    this.params = params;
    Status.__super__.constructor.call(this, this.params);
    this.action = this.getEntity('status_action', null);
    this.type = this.getEntity('status_type', null);
    this.value = this.getEntity('status_value', null);
    this.vocabulary = __dirname + '/vocabulary.json';
  }

  Status.prototype.exec = function() {
    var hours, response, timeOfDay;
    hours = new Date().getHours();
    timeOfDay = (function() {
      switch (false) {
        case !(hours >= 4 && hours < 12):
          return 'morning';
        case !(hours >= 12 && hours < 18):
          return 'afternoon';
        case !(hours >= 18 && hours < 23):
          return 'evening';
        default:
          return 'night';
      }
    })();
    response = {
      voice: {
        vocabulary: this.vocabulary,
        code: [this.action, this.type, this.value].join('.'),
        args: ['sir', timeOfDay]
      }
    };
    return Status.__super__.exec.call(this, response);
  };

  return Status;

})(BaseModule);

module.exports = Status;
