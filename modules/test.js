// Generated by CoffeeScript 1.9.1
(function() {
  var Module, Test,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Module = require('../').Module;

  Test = (function(superClass) {
    extend(Test, superClass);

    function Test() {
      return Test.__super__.constructor.apply(this, arguments);
    }

    Test.prototype.exec = function() {
      return this.response.addText('It works!').addVoice('Yes!').send();
    };

    return Test;

  })(Module);

  module.exports = Test;

}).call(this);
